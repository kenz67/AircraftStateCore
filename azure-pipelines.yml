# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# https://learn.microsoft.com/en-us/azure/devops/pipelines/create-first-pipeline?view=azure-devops&tabs=net%2Cbrowser

pr:
- master

pool:
  name: Default  

variables:
  buildConfiguration: 'Release'
  utBuildConfiguration: 'Debug' 

#Don't need to Build and Publish (publish should do both, but keeping this here for now as may add test steps, etc)
stages:
- stage: Unit_Test
  jobs:
  - job: "Unit_Test"
    displayName: "Run Unit Test"
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Test"
      inputs:
         command: test
         projects: '**/*Tests/*.csproj'
         arguments: '--configuration $(utBuildConfiguration)'

- stage: Publish
  #condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - job: Build
    displayName: 'Build Release'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/AircraftStateCore.csproj'
        arguments: '--configuration $(buildConfiguration)'
    - task: PowerShell@2 
      inputs: targetType: 'inline' 
      script: | 
          echo $(Build.StagingDirectory)
          $sourcePath = "$(Build.StagingDirectory)\AircraftStateCore\bin\Release\net9.0-windows10.0.19041.0\win10-x64" 
          $newName = "$(Build.StagingDirectory)\AircraftStateCore\bin\Release\net9.0-windows10.0.19041.0\AircraftState" 
          Rename-Item -Path $sourcePath -NewName $newName displayName:
      displayName: "Rename Output Folder"
    - task: PowerShell@2
      inputs: targetType: 'inline' 
      script: | 
          [xml]$xml = Get-Content '(Build.StagingDirectory)\AircraftStateCore/AircraftStateCore.csproj' 
          $version = $xml.Project.PropertyGroup.ApplicationDisplayVersion Write-Host 
          "##vso[task.setvariable variable=appVersion]$version"
      displayName: 'Extract Version Number from Project File'


#     - script: dotnet build --configuration $(buildConfiguration)
#       displayName: "Build $(buildConfiguration)"
#     - script: ren 'C:\Users\ken\Documents\Development\Azure Devops\_work\1\s\AircraftStateCore\bin\Release\net9.0-windows10.0.19041.0\win10-x64' 'C:\Users\ken\Documents\Development\Azure Devops\_work\1\s\AircraftStateCore\bin\Release\net9.0-windows10.0.19041.0\AircraftState'
#       displayName: "Set output folder name"
     
  # - job: Publish
  #   dependsOn: Build
  #   variables: appVersion: $[dependencies.ExtractVersion.outputs['ExtractVersion.appVersion']]
  #   steps:    
  #   - checkout: none
  #   - task: ArchiveFiles@2
  #     inputs: 
  #        rootFolderOrFile: 'C:\Users\ken\Documents\Development\Azure Devops\_work\1\s\AircraftStateCore\bin\Release\net9.0-windows10.0.19041.0\AircraftState'
  #        archiveType: zip
  #        archiveFile: '$(Build.ArtifactStagingDirectory)/$(appVersion).zip'




        #where/how to publish for upload to FlightSim.to
#     - script: dotnet publish fstools/fstools.csproj /p:PublishProfile="Properties/PublishProfiles/fstools.zaldo.com - Web Deploy.pubxml" /p:Password=$(ftpPassword) /p:UserName=$(ftpUser)      
#       displayName: 'Push to Server'